Elm.Engine = Elm.Engine || {};
Elm.Engine.Camera = Elm.Engine.Camera || {};
Elm.Engine.Camera.Camera = Elm.Engine.Camera.Camera || {};
Elm.Engine.Camera.Camera.make = function (_elm) {
   "use strict";
   _elm.Engine = _elm.Engine || {};
   _elm.Engine.Camera = _elm.Engine.Camera || {};
   _elm.Engine.Camera.Camera = _elm.Engine.Camera.Camera || {};
   if (_elm.Engine.Camera.Camera.values)
   return _elm.Engine.Camera.Camera.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   _P = _N.Ports.make(_elm),
   $moduleName = "Engine.Camera.Camera",
   $Engine$Transform$Transform = Elm.Engine.Transform.Transform.make(_elm),
   $Math$Vector3 = Elm.Math.Vector3.make(_elm);
   var camera = A4($Engine$Transform$Transform.Transform,
   A3($Math$Vector3.vec3,0,0,-10),
   $Engine$Transform$Transform.transform.rotation,
   $Engine$Transform$Transform.transform.scale,
   {_: {}
   ,aspectRatio: 1
   ,farClipping: 80000
   ,fieldOfView: 45
   ,nearClipping: 1});
   _elm.Engine.Camera.Camera.values = {_op: _op
                                      ,camera: camera};
   return _elm.Engine.Camera.Camera.values;
};