Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values)
   return _elm.Main.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   _P = _N.Ports.make(_elm),
   $moduleName = "Main",
   $Engine = Elm.Engine.make(_elm),
   $Math$Vector3 = Elm.Math.Vector3.make(_elm);
   var myPyramid = _U.replace([["position"
                               ,A3($Math$Vector3.vec3,2,0,0)]
                              ,["scale"
                               ,A3($Math$Vector3.vec3,
                               0.5,
                               1,
                               0.5)]],
   $Engine.pyramid);
   var myCube = _U.replace([["position"
                            ,A3($Math$Vector3.vec3,0,0,0)]
                           ,["rotation"
                            ,A3($Math$Vector3.vec3,45,0,45)]
                           ,["scale"
                            ,A3($Math$Vector3.vec3,
                            1.5,
                            1.5,
                            1.5)]],
   $Engine.cube);
   var myScene = _U.replace([["objects"
                             ,_L.fromArray([myCube
                                           ,myPyramid])]],
   $Engine.scene);
   var main = $Engine.render(myScene);
   _elm.Main.values = {_op: _op
                      ,myCube: myCube
                      ,myPyramid: myPyramid
                      ,myScene: myScene
                      ,main: main};
   return _elm.Main.values;
};