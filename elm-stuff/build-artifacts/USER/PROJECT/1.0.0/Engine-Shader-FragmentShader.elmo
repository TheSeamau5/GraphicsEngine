Elm.Engine = Elm.Engine || {};
Elm.Engine.Shader = Elm.Engine.Shader || {};
Elm.Engine.Shader.FragmentShader = Elm.Engine.Shader.FragmentShader || {};
Elm.Engine.Shader.FragmentShader.make = function (_elm) {
   "use strict";
   _elm.Engine = _elm.Engine || {};
   _elm.Engine.Shader = _elm.Engine.Shader || {};
   _elm.Engine.Shader.FragmentShader = _elm.Engine.Shader.FragmentShader || {};
   if (_elm.Engine.Shader.FragmentShader.values)
   return _elm.Engine.Shader.FragmentShader.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   _P = _N.Ports.make(_elm),
   $moduleName = "Engine.Shader.FragmentShader";
   var fragmentShader = "\n\nvoid main(){\n  gl_FragColor = vec4(1.0,0.0,0.0,1.0);\n}\n\n";
   _elm.Engine.Shader.FragmentShader.values = {_op: _op
                                              ,fragmentShader: fragmentShader};
   return _elm.Engine.Shader.FragmentShader.values;
};